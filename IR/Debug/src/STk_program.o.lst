   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"STk_program.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MSTK_VoidInit,"ax",%progbits
  16              		.align	1
  17              		.global	MSTK_VoidInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MSTK_VoidInit:
  24              	.LFB0:
  25              		.file 1 "../src/STk_program.c"
   1:../src/STk_program.c **** /***************************/
   2:../src/STk_program.c **** /*Author : ahmed alaa	*/
   3:../src/STk_program.c **** /*date : 26/8/2020 		*/
   4:../src/STk_program.c **** /*version : v04			*/
   5:../src/STk_program.c **** /***************************/
   6:../src/STk_program.c **** 
   7:../src/STk_program.c **** #include "STD_TYPES.h"
   8:../src/STk_program.c **** #include "BIT_MATH.h"
   9:../src/STk_program.c **** 
  10:../src/STk_program.c **** #include "STk_interface.h"
  11:../src/STk_program.c **** #include "STk_private.h"
  12:../src/STk_program.c **** #include "STk_config.h"
  13:../src/STk_program.c **** 
  14:../src/STk_program.c **** 
  15:../src/STk_program.c **** 
  16:../src/STk_program.c **** 
  17:../src/STk_program.c **** //Global variable pointer to function
  18:../src/STk_program.c **** static void (*CALLBACK)(void);
  19:../src/STk_program.c **** 
  20:../src/STk_program.c **** //Global variable check for repeating delay
  21:../src/STk_program.c **** static u8 MSTK_Repeat;
  22:../src/STk_program.c **** 
  23:../src/STk_program.c **** void MSTK_VoidInit(void)
  24:../src/STk_program.c **** {
  26              		.loc 1 24 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  25:../src/STk_program.c **** #if CLKSOURCE==AHB_8	/* Disable counter - Set clock source AHB/8*/
  26:../src/STk_program.c **** 
  27:../src/STk_program.c **** 	MSTK->CTRL = 0 ;
  31              		.loc 1 27 0
  32 0000 014B     		ldr	r3, .L2
  33 0002 0022     		movs	r2, #0
  34 0004 1A60     		str	r2, [r3]
  28:../src/STk_program.c **** #elif CLKSOURCE==AHB
  29:../src/STk_program.c **** 
  30:../src/STk_program.c **** 	MSTK_CTRL = 0x00000004 ;/* Disable counter - Set clock source AHB*/
  31:../src/STk_program.c **** 
  32:../src/STk_program.c **** #else
  33:../src/STk_program.c **** 	/*REPORT ERROR*/
  34:../src/STk_program.c **** 
  35:../src/STk_program.c **** #endif
  36:../src/STk_program.c **** 
  37:../src/STk_program.c **** }
  35              		.loc 1 37 0
  36 0006 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 0008 10E000E0 		.word	-536813552
  41              		.cfi_endproc
  42              	.LFE0:
  44              		.section	.text.MSTK_VoidSetBusyWait,"ax",%progbits
  45              		.align	1
  46              		.global	MSTK_VoidSetBusyWait
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	MSTK_VoidSetBusyWait:
  53              	.LFB1:
  38:../src/STk_program.c **** 
  39:../src/STk_program.c **** void MSTK_VoidSetBusyWait(u32 copy_u32ticks)
  40:../src/STk_program.c **** {
  54              		.loc 1 40 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL0:
  41:../src/STk_program.c **** 	//	copy_u32ticks-=1;
  42:../src/STk_program.c **** 
  43:../src/STk_program.c **** 	MSTK->LOAD = copy_u32ticks; /* Load ticks to load register */
  60              		.loc 1 43 0
  61 0000 094B     		ldr	r3, .L7
  62 0002 5860     		str	r0, [r3, #4]
  44:../src/STk_program.c **** 
  45:../src/STk_program.c **** 	SET_BIT(MSTK->CTRL, 0);	/* start count*/
  63              		.loc 1 45 0
  64 0004 1A68     		ldr	r2, [r3]
  65 0006 42F00102 		orr	r2, r2, #1
  66 000a 1A60     		str	r2, [r3]
  46:../src/STk_program.c **** 
  47:../src/STk_program.c **** 	/* Wait till flag is raised */
  48:../src/STk_program.c **** 	while(GET_BIT(MSTK->CTRL,16)==0)
  67              		.loc 1 48 0
  68 000c 00E0     		b	.L5
  69              	.L6:
  49:../src/STk_program.c **** 	{
  50:../src/STk_program.c **** 		asm("NOP");
  70              		.loc 1 50 0
  71              		.syntax unified
  72              	@ 50 "../src/STk_program.c" 1
  73 000e 00BF     		NOP
  74              	@ 0 "" 2
  75              		.thumb
  76              		.syntax unified
  77              	.L5:
  48:../src/STk_program.c **** 	{
  78              		.loc 1 48 0
  79 0010 054B     		ldr	r3, .L7
  80 0012 1B68     		ldr	r3, [r3]
  81 0014 13F4803F 		tst	r3, #65536
  82 0018 F9D0     		beq	.L6
  51:../src/STk_program.c **** 	}
  52:../src/STk_program.c **** 
  53:../src/STk_program.c **** 	/*Stop timer and no repeating*/
  54:../src/STk_program.c **** 	MSTK->CTRL=0;
  83              		.loc 1 54 0
  84 001a 034B     		ldr	r3, .L7
  85 001c 0022     		movs	r2, #0
  86 001e 1A60     		str	r2, [r3]
  55:../src/STk_program.c **** 	MSTK->LOAD = 0;
  87              		.loc 1 55 0
  88 0020 5A60     		str	r2, [r3, #4]
  56:../src/STk_program.c **** 	MSTK->VAL=0;
  89              		.loc 1 56 0
  90 0022 9A60     		str	r2, [r3, #8]
  57:../src/STk_program.c **** 
  58:../src/STk_program.c **** }
  91              		.loc 1 58 0
  92 0024 7047     		bx	lr
  93              	.L8:
  94 0026 00BF     		.align	2
  95              	.L7:
  96 0028 10E000E0 		.word	-536813552
  97              		.cfi_endproc
  98              	.LFE1:
 100              		.section	.text.MSTK_VoidSetIntervalSingle,"ax",%progbits
 101              		.align	1
 102              		.global	MSTK_VoidSetIntervalSingle
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu softvfp
 108              	MSTK_VoidSetIntervalSingle:
 109              	.LFB2:
  59:../src/STk_program.c **** 
  60:../src/STk_program.c **** 
  61:../src/STk_program.c **** void MSTK_VoidSetIntervalSingle(u32 copyu32ticks,void (*copy_ptr)(void))
  62:../src/STk_program.c **** {
 110              		.loc 1 62 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              	.LVL1:
 116 0000 10B4     		push	{r4}
 117              		.cfi_def_cfa_offset 4
 118              		.cfi_offset 4, -4
  63:../src/STk_program.c **** 	/*Disable timer*/
  64:../src/STk_program.c **** 	CLR_BIT(MSTK->CTRL,0) ;
 119              		.loc 1 64 0
 120 0002 0B4B     		ldr	r3, .L11
 121 0004 1A68     		ldr	r2, [r3]
 122 0006 22F00102 		bic	r2, r2, #1
 123 000a 1A60     		str	r2, [r3]
  65:../src/STk_program.c **** 	MSTK->VAL =0;
 124              		.loc 1 65 0
 125 000c 0024     		movs	r4, #0
 126 000e 9C60     		str	r4, [r3, #8]
  66:../src/STk_program.c **** 
  67:../src/STk_program.c **** 	/* Load ticks to load register */
  68:../src/STk_program.c **** 	MSTK->LOAD = copyu32ticks;
 127              		.loc 1 68 0
 128 0010 5860     		str	r0, [r3, #4]
  69:../src/STk_program.c **** 
  70:../src/STk_program.c **** 	/* start count*/
  71:../src/STk_program.c **** 	SET_BIT(MSTK->CTRL,0) ;
 129              		.loc 1 71 0
 130 0012 1A68     		ldr	r2, [r3]
 131 0014 42F00102 		orr	r2, r2, #1
 132 0018 1A60     		str	r2, [r3]
  72:../src/STk_program.c **** 
  73:../src/STk_program.c **** 	// point to the passed function
  74:../src/STk_program.c **** 	CALLBACK = copy_ptr;
 133              		.loc 1 74 0
 134 001a 064A     		ldr	r2, .L11+4
 135 001c 1160     		str	r1, [r2]
  75:../src/STk_program.c **** 
  76:../src/STk_program.c **** 	// single repeat
  77:../src/STk_program.c **** 	MSTK_Repeat=MSTK_SINGLE_INTERVAL;
 136              		.loc 1 77 0
 137 001e 064A     		ldr	r2, .L11+8
 138 0020 1470     		strb	r4, [r2]
  78:../src/STk_program.c **** 
  79:../src/STk_program.c **** 	SET_BIT(MSTK->CTRL,1) ;			 //enable interrupt
 139              		.loc 1 79 0
 140 0022 1A68     		ldr	r2, [r3]
 141 0024 42F00202 		orr	r2, r2, #2
 142 0028 1A60     		str	r2, [r3]
  80:../src/STk_program.c **** 
  81:../src/STk_program.c **** 
  82:../src/STk_program.c **** }
 143              		.loc 1 82 0
 144 002a 10BC     		pop	{r4}
 145              		.cfi_restore 4
 146              		.cfi_def_cfa_offset 0
 147 002c 7047     		bx	lr
 148              	.L12:
 149 002e 00BF     		.align	2
 150              	.L11:
 151 0030 10E000E0 		.word	-536813552
 152 0034 00000000 		.word	.LANCHOR0
 153 0038 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE2:
 157              		.section	.text.MSTK_VoidSetIntervalPeriodic,"ax",%progbits
 158              		.align	1
 159              		.global	MSTK_VoidSetIntervalPeriodic
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	MSTK_VoidSetIntervalPeriodic:
 166              	.LFB3:
  83:../src/STk_program.c **** void MSTK_VoidSetIntervalPeriodic(u32 copyu32ticks,void (*copy_ptr)(void))
  84:../src/STk_program.c **** {
 167              		.loc 1 84 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL2:
  85:../src/STk_program.c **** 	MSTK->LOAD = copyu32ticks; 			/* Load ticks to load register */
 173              		.loc 1 85 0
 174 0000 074B     		ldr	r3, .L14
 175 0002 5860     		str	r0, [r3, #4]
  86:../src/STk_program.c **** 
  87:../src/STk_program.c **** 	MSTK_Repeat=MSTK_PERIOD_INTERVAL;	// Periodic repeat
 176              		.loc 1 87 0
 177 0004 074A     		ldr	r2, .L14+4
 178 0006 0120     		movs	r0, #1
 179              	.LVL3:
 180 0008 1070     		strb	r0, [r2]
 181              	.LVL4:
  88:../src/STk_program.c **** 
  89:../src/STk_program.c **** 	CALLBACK = copy_ptr;				// point to the passed function
 182              		.loc 1 89 0
 183 000a 074A     		ldr	r2, .L14+8
 184 000c 1160     		str	r1, [r2]
  90:../src/STk_program.c **** 
  91:../src/STk_program.c **** 	SET_BIT(MSTK->CTRL,0) ;				/* start count*/
 185              		.loc 1 91 0
 186 000e 1A68     		ldr	r2, [r3]
 187 0010 0243     		orrs	r2, r2, r0
 188 0012 1A60     		str	r2, [r3]
  92:../src/STk_program.c **** 
  93:../src/STk_program.c **** 	SET_BIT(MSTK->CTRL,1) ;				//enable interrupt
 189              		.loc 1 93 0
 190 0014 1A68     		ldr	r2, [r3]
 191 0016 42F00202 		orr	r2, r2, #2
 192 001a 1A60     		str	r2, [r3]
  94:../src/STk_program.c **** 
  95:../src/STk_program.c **** }
 193              		.loc 1 95 0
 194 001c 7047     		bx	lr
 195              	.L15:
 196 001e 00BF     		.align	2
 197              	.L14:
 198 0020 10E000E0 		.word	-536813552
 199 0024 00000000 		.word	.LANCHOR1
 200 0028 00000000 		.word	.LANCHOR0
 201              		.cfi_endproc
 202              	.LFE3:
 204              		.section	.text.MSTK_VoidStopInterval,"ax",%progbits
 205              		.align	1
 206              		.global	MSTK_VoidStopInterval
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu softvfp
 212              	MSTK_VoidStopInterval:
 213              	.LFB4:
  96:../src/STk_program.c **** void MSTK_VoidStopInterval(void)
  97:../src/STk_program.c **** {
 214              		.loc 1 97 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
  98:../src/STk_program.c **** 	CLR_BIT(MSTK->CTRL,1);	/* Disable STK Interrupt */
 219              		.loc 1 98 0
 220 0000 044B     		ldr	r3, .L17
 221 0002 1A68     		ldr	r2, [r3]
 222 0004 22F00202 		bic	r2, r2, #2
 223 0008 1A60     		str	r2, [r3]
  99:../src/STk_program.c **** 
 100:../src/STk_program.c **** 	/*Stop timer and no repeating*/
 101:../src/STk_program.c **** 	MSTK->CTRL=0;
 224              		.loc 1 101 0
 225 000a 0022     		movs	r2, #0
 226 000c 1A60     		str	r2, [r3]
 102:../src/STk_program.c **** 	MSTK->LOAD = 0;
 227              		.loc 1 102 0
 228 000e 5A60     		str	r2, [r3, #4]
 103:../src/STk_program.c **** 	MSTK->VAL=0;
 229              		.loc 1 103 0
 230 0010 9A60     		str	r2, [r3, #8]
 104:../src/STk_program.c **** 
 105:../src/STk_program.c **** }
 231              		.loc 1 105 0
 232 0012 7047     		bx	lr
 233              	.L18:
 234              		.align	2
 235              	.L17:
 236 0014 10E000E0 		.word	-536813552
 237              		.cfi_endproc
 238              	.LFE4:
 240              		.section	.text.MSTK_U32GetElapsedTime,"ax",%progbits
 241              		.align	1
 242              		.global	MSTK_U32GetElapsedTime
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu softvfp
 248              	MSTK_U32GetElapsedTime:
 249              	.LFB5:
 106:../src/STk_program.c **** u32 MSTK_U32GetElapsedTime(void)
 107:../src/STk_program.c **** {
 250              		.loc 1 107 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 108:../src/STk_program.c **** 	u32 ElapsedTime ;
 109:../src/STk_program.c **** 	ElapsedTime = MSTK->LOAD - MSTK->VAL;
 255              		.loc 1 109 0
 256 0000 024B     		ldr	r3, .L20
 257 0002 5868     		ldr	r0, [r3, #4]
 258 0004 9B68     		ldr	r3, [r3, #8]
 259              	.LVL5:
 110:../src/STk_program.c **** 
 111:../src/STk_program.c **** 
 112:../src/STk_program.c **** 	return ElapsedTime;
 113:../src/STk_program.c **** }
 260              		.loc 1 113 0
 261 0006 C01A     		subs	r0, r0, r3
 262              	.LVL6:
 263 0008 7047     		bx	lr
 264              	.L21:
 265 000a 00BF     		.align	2
 266              	.L20:
 267 000c 10E000E0 		.word	-536813552
 268              		.cfi_endproc
 269              	.LFE5:
 271              		.section	.text.MSTK_U32GetRemainingTime,"ax",%progbits
 272              		.align	1
 273              		.global	MSTK_U32GetRemainingTime
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 279              	MSTK_U32GetRemainingTime:
 280              	.LFB6:
 114:../src/STk_program.c **** u32 MSTK_U32GetRemainingTime(void)
 115:../src/STk_program.c **** {
 281              		.loc 1 115 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 116:../src/STk_program.c **** 	u32 RemainingTime = MSTK->VAL;
 286              		.loc 1 116 0
 287 0000 014B     		ldr	r3, .L23
 288 0002 9868     		ldr	r0, [r3, #8]
 289              	.LVL7:
 117:../src/STk_program.c **** 
 118:../src/STk_program.c **** 
 119:../src/STk_program.c **** 	return RemainingTime;
 120:../src/STk_program.c **** }
 290              		.loc 1 120 0
 291 0004 7047     		bx	lr
 292              	.L24:
 293 0006 00BF     		.align	2
 294              	.L23:
 295 0008 10E000E0 		.word	-536813552
 296              		.cfi_endproc
 297              	.LFE6:
 299              		.section	.text.SysTick_Handler,"ax",%progbits
 300              		.align	1
 301              		.global	SysTick_Handler
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu softvfp
 307              	SysTick_Handler:
 308              	.LFB7:
 121:../src/STk_program.c **** 
 122:../src/STk_program.c **** void SysTick_Handler()	/*mwgoda f el .c m4 f el main */
 123:../src/STk_program.c **** {
 309              		.loc 1 123 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 08B5     		push	{r3, lr}
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 124:../src/STk_program.c **** 
 125:../src/STk_program.c **** 	if(MSTK_Repeat == MSTK_SINGLE_INTERVAL)
 317              		.loc 1 125 0
 318 0002 084B     		ldr	r3, .L28
 319 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 320 0006 43B9     		cbnz	r3, .L26
 126:../src/STk_program.c **** 	{
 127:../src/STk_program.c **** 		/* Disable STK Interrupt */
 128:../src/STk_program.c **** 		CLR_BIT(MSTK->CTRL, 1);
 321              		.loc 1 128 0
 322 0008 074B     		ldr	r3, .L28+4
 323 000a 1A68     		ldr	r2, [r3]
 324 000c 22F00202 		bic	r2, r2, #2
 325 0010 1A60     		str	r2, [r3]
 129:../src/STk_program.c **** 		/*Stop timer and no repeating*/
 130:../src/STk_program.c **** 
 131:../src/STk_program.c **** 		MSTK->CTRL=0;
 326              		.loc 1 131 0
 327 0012 0022     		movs	r2, #0
 328 0014 1A60     		str	r2, [r3]
 132:../src/STk_program.c **** 		MSTK->LOAD = 0;
 329              		.loc 1 132 0
 330 0016 5A60     		str	r2, [r3, #4]
 133:../src/STk_program.c **** 		MSTK->VAL=0;
 331              		.loc 1 133 0
 332 0018 9A60     		str	r2, [r3, #8]
 333              	.L26:
 134:../src/STk_program.c **** 	}
 135:../src/STk_program.c **** 
 136:../src/STk_program.c **** 
 137:../src/STk_program.c **** 
 138:../src/STk_program.c **** 	CALLBACK();
 334              		.loc 1 138 0
 335 001a 044B     		ldr	r3, .L28+8
 336 001c 1B68     		ldr	r3, [r3]
 337 001e 9847     		blx	r3
 338              	.LVL8:
 139:../src/STk_program.c **** }
 339              		.loc 1 139 0
 340 0020 08BD     		pop	{r3, pc}
 341              	.L29:
 342 0022 00BF     		.align	2
 343              	.L28:
 344 0024 00000000 		.word	.LANCHOR1
 345 0028 10E000E0 		.word	-536813552
 346 002c 00000000 		.word	.LANCHOR0
 347              		.cfi_endproc
 348              	.LFE7:
 350              		.section	.bss.CALLBACK,"aw",%nobits
 351              		.align	2
 352              		.set	.LANCHOR0,. + 0
 355              	CALLBACK:
 356 0000 00000000 		.space	4
 357              		.section	.bss.MSTK_Repeat,"aw",%nobits
 358              		.set	.LANCHOR1,. + 0
 361              	MSTK_Repeat:
 362 0000 00       		.space	1
 363              		.text
 364              	.Letext0:
 365              		.file 2 "../include/STD_TYPES.h"
 366              		.file 3 "../include/STk_private.h"
DEFINED SYMBOLS
                            *ABS*:00000000 STk_program.c
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:16     .text.MSTK_VoidInit:00000000 $t
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:23     .text.MSTK_VoidInit:00000000 MSTK_VoidInit
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:40     .text.MSTK_VoidInit:00000008 $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:45     .text.MSTK_VoidSetBusyWait:00000000 $t
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:52     .text.MSTK_VoidSetBusyWait:00000000 MSTK_VoidSetBusyWait
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:96     .text.MSTK_VoidSetBusyWait:00000028 $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:101    .text.MSTK_VoidSetIntervalSingle:00000000 $t
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:108    .text.MSTK_VoidSetIntervalSingle:00000000 MSTK_VoidSetIntervalSingle
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:151    .text.MSTK_VoidSetIntervalSingle:00000030 $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:158    .text.MSTK_VoidSetIntervalPeriodic:00000000 $t
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:165    .text.MSTK_VoidSetIntervalPeriodic:00000000 MSTK_VoidSetIntervalPeriodic
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:198    .text.MSTK_VoidSetIntervalPeriodic:00000020 $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:205    .text.MSTK_VoidStopInterval:00000000 $t
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:212    .text.MSTK_VoidStopInterval:00000000 MSTK_VoidStopInterval
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:236    .text.MSTK_VoidStopInterval:00000014 $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:241    .text.MSTK_U32GetElapsedTime:00000000 $t
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:248    .text.MSTK_U32GetElapsedTime:00000000 MSTK_U32GetElapsedTime
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:267    .text.MSTK_U32GetElapsedTime:0000000c $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:272    .text.MSTK_U32GetRemainingTime:00000000 $t
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:279    .text.MSTK_U32GetRemainingTime:00000000 MSTK_U32GetRemainingTime
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:295    .text.MSTK_U32GetRemainingTime:00000008 $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:300    .text.SysTick_Handler:00000000 $t
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:307    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:344    .text.SysTick_Handler:00000024 $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:351    .bss.CALLBACK:00000000 $d
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:355    .bss.CALLBACK:00000000 CALLBACK
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:361    .bss.MSTK_Repeat:00000000 MSTK_Repeat
C:\Users\AHMEDA~1\AppData\Local\Temp\ccv38Lyn.s:362    .bss.MSTK_Repeat:00000000 $d
                           .group:00000000 wm4.0.c450a18b2a29049e2cbb4137d58ca9b1
                           .group:00000000 wm4.BIT_MATH.h.8.0385af17eb3d24c1ce205d0ed1b8762b
                           .group:00000000 wm4.STk_private.h.8.3e69c36e56ada219cc0780815430b97d
                           .group:00000000 wm4.STk_config.h.8.4fd149bdf5cd1961388b6a652a875e44

NO UNDEFINED SYMBOLS
