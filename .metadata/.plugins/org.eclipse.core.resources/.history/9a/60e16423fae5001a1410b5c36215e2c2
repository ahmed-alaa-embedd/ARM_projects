/***************************/
/*Author : ahmed alaa	*/
/*date : 22/8/2020 		*/
/*version : v01			*/
/***************************/

#include "STD_TYPES.h"
#include "BIT_MATH.h"

#include "EXTI_interface.h"
#include "EXTI_config.h"
#include "EXTI_private.h"

void MEXTI_Init()
{
#if EXTI_MODE == RISING

	SET_BIT(EXTI -> RTSR , EXTI_LINE);	/*Rising edge*/

#elif EXTI_MODE == FALLING
	SET_BIT(EXTI -> FTSR , EXTI_LINE);	/*Falling edge*/

#elif EXTI_MODE == ON_CHANGE
	SET_BIT(EXTI -> RTSR , EXTI_LINE);	/*trigger */
	SET_BIT(EXTI -> FTSR , EXTI_LINE);

#else	#error "wrong mode and line choice"

#endif
}

void MEXTI_VoidEnableEXTI(u8 copy_u8Line)
{
	SET_BIT(EXTI -> IMR , copy_u8Line);
}
void MEXTI_VoidDisableEXTI(u8 copy_u8Line)
{
	CLR_BIT(EXTI -> IMR , copy_u8Line);
}

void MEXTI_VoidSwTrigger(u8 copy_u8Line)
{
	SET_BIT(EXTI -> SWIER , copy_u8Line);
}

void MEXTI_VoidSetSignalLatch(u8 copy_u8Line, u8 copy_u8Mode)
{
	switch(copy_u8Mode)
	{
	case RISING:
	case FALLING:
	case ON_CHANGE:

	}
}
